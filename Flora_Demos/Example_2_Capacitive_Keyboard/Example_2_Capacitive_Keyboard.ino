// Example of capacitive sense buttons generating keyboard presses.
// Author: Tony DiCola
// License: Public Domain
#include <Keyboard.h>
#include <CapacitiveSensor.h>


#define COMMON_PIN    12               // Send pin connected to both capacitive touch buttons.

#define BUTTON1_PIN   9                // Read pin connected to capacitive sense button 1.

#define BUTTON2_PIN   10               // Read pin connected to capactivie sense button 2.

#define CAP_THRESHOLD 30               // Capactive sensor library threshold to consider
                                       // a cap sense circuit touched.  Use the serial
                                       // monitor to see the values as you touch the buttons,
                                       // then pick a threshold value that's large enough to
                                       // not be picked up by random noise, but small enough
                                       // to detect touches.

#define CAP_SAMPLES   30               // Number of samples to take when reading a capacitive
                                       // input.  A higher value might reduce noise but increase
                                       // the amount of time to take a reading.  Stick with
                                       // the default of 30.

#define BUTTON1_KEY   KEY_UP_ARROW     // Keyboard key generated by button 1 press.
                                       // See all the key values here:
                                       //   https://www.arduino.cc/en/Reference/KeyboardModifiers

#define BUTTON2_KEY   KEY_DOWN_ARROW   // Keyboard key generated by button 2 press.


// Define capactive sensor library objects for each button.
CapacitiveSensor button1 = CapacitiveSensor(COMMON_PIN, BUTTON1_PIN);
CapacitiveSensor button2 = CapacitiveSensor(COMMON_PIN, BUTTON2_PIN);

void setup() {
  // Initialize keyboard library.
  Keyboard.begin();
  // Initialize serial port to print cap sensor library output.
  Serial.begin(9600);
}

void loop() {
  // Take capacitive button readings.
  long cap1 = button1.capacitiveSensor(CAP_SAMPLES);
  long cap2 = button2.capacitiveSensor(CAP_SAMPLES);
  // Print out the capacitance values in two columns.
  Serial.print(cap1);
  Serial.print("\t");
  Serial.println(cap2);
  // Check if cap values are above threshold and generate keypresses.
  if (cap1 >= CAP_THRESHOLD) {
    Keyboard.write(BUTTON1_KEY);
  }
  if (cap2 >= CAP_THRESHOLD) {
    Keyboard.write(BUTTON2_KEY);
  }
  // Delay to slow things down and prevent spamming keypresses and serial port data.
  delay(100);
}

